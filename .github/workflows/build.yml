name: Build and test

# Run the jobs for pushes and pull requests targetting main branch.
on: 
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:

  # Build and test project.
  build-and-test:
    strategy:
      matrix:
        os:
          - ubuntu-18.04
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install dependencies (Linux)
        run: sudo apt-get install cmake
        if: startsWith(matrix.os, 'ubuntu')
      - uses: actions/checkout@v2
      - name: Build project
        run: |
          mkdir build
          cd build
          cmake -DBUILD_TESTING=ON \
                -DCMAKE_INSTALL_PREFIX="/tmp/project/" \
                ..
          cmake --build  . -- VERBOSE=1 -j8 all test install
      - name: "Upload installation as artifact."
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }}
          path: /tmp/project/

  # Run automated code formatting checks.
  code-formatting-check:
    runs-on: ubuntu-18.04 
    steps:
      - name: Install dependencies (Linux)
        run: |
          sudo apt-get install clang-format-10
      - uses: actions/checkout@v2
      - name: Run clang-format on source code
        run: |
          find . -name ".git" -prune -o -name "*.cpp" -type f -exec clang-format -i --verbose {} + -o -name "*.h" -type f -exec clang-format -i --verbose {} +
      - name: Check for code differences
        run: |
          set +e
          git diff --color
          git diff-index --quiet HEAD --; EXIT_CODE=$?
          set -e
          if [ $EXIT_CODE -ne 0 ]; then echo "C++ code formatting check failed.  Please run clang-format on *.h and *.cpp, then push your changes."; fi
          exit $EXIT_CODE
